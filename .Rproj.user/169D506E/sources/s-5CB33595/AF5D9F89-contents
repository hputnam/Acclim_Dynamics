---
title: "Environmental_Data"
author: "EL Strand"
date: "5/27/2020"
output: html_document
---

Select Knit > Project Directory
```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

Contents:
1. NOAA Buoy Data 
2. Sampling Timeline 
3. Tank Temperature Conditions
4. Tank pH and pCO2 Conditions 
5. Carbonate Chemistry Data 
6. Continuous Data: pH (Apex), Temperature (Hobo), Light (Apex)
## add within markdown file links for each section

Clear workspace. 
```{r}
rm(list=ls()) 
```

Required packages for the below analyses.
```{r}
library(dplyr)
library(tidyr)
library(tidyverse)
library(ggplot2)
library(scales)
library(lubridate)
library(patchwork) # To display 2 charts together
library(hrbrthemes)
library(reshape2)
library(gridExtra)
library(plotrix)
```

####### NOAA BUOY DATA ####### 
Viewing the temperature and pH data from local NOAA Hawaii Buoys (XX) to guide decisions in experimental design.

Reading in temperature and pH data files.
```{r}
NOAA_temp <- read.csv('Environmental_data/NOAA_Temp_Buoy_CO-OPS_1612480_from_20180901_to_20180923.csv')
NOAA_temp <- NOAA_temp %>% rename(Date = DATE.TIME) %>% rename(Temperature = WATERTEMP) %>% select(-CONDUCTIVITY) # %>% # renaming columns and deleting the empty conductivity column
  # separate(Date, c("Date", "Time")) - separating into Date and Time columns 
# NOAA_pH <- fill in when have pH dataframe

# NOAA_total <- full_join(NOAA_temp, NOAA_pH, by="Date")
```

Graphing above dataframes. 
```{r}
## Total September 1 2018 - September 23 2018
ggplot(NOAA_temp, aes(x=Date, y=Temperature)) +
  geom_line() +
  geom_point()
  xlab("") +
  theme_classic() +
  theme(axis.text.x=element_text(angle=60, hjust=1)) +
  # scale_x_date(limit=c(as.Date("2019-08-31"),as.Date("2019-09-24"))) +
  ylim(25,30)

## Subset to show daily variation 
```





####### Sampling Timeline ####### 

Loading dataframe. 
```{r}
Timepoint <- read.csv('Environmental_data/Sampling_Timeline.csv')
```

Converting the stage column to ordinal categorical variable and choosing colors for each level.
```{r}
stage_levels <- c("Acute Stress", "Chronic Stress", "Recovery")
stage_colors <- c("firebrick2", "firebrick4", "dodgerblue1")

Timepoint$Stage <- factor(Timepoint$Stage, levels = stage_levels, ordered = TRUE)
```

Adding positions and heights to each timepoint row by creating a new dataframe and merging that dataframe with the original timepoint dataframe.
```{r}
positions <- c(0.5, -0.5, 1.0, -1.0, 1.5, -1.5)
directions <- c(1, -1)

line_pos <- data.frame(
    "Date"=unique(Timepoint$Date),
    "position"=rep(positions, length.out=length(unique(Timepoint$Date))),
    "direction"=rep(directions, length.out=length(unique(Timepoint$Date)))
)

Timepoint <- merge(x=Timepoint, y=line_pos, by="Date", all = TRUE)
Timepoint <- Timepoint[with(Timepoint, order(Date, Stage)), ]

head(Timepoint)
```

Adding text position values based on the previous position and direction values. 
Adding a mount_count column because some months/days have multiple timepoints.
```{r}
text_offset <- 0.05

Timepoint$month_count <- ave(Timepoint$Date==Timepoint$Date, Timepoint$Date, FUN=cumsum)
Timepoint$text_position <- (Timepoint$month_count * text_offset * Timepoint$direction) + Timepoint$position
head(Timepoint)
```

Creating the timeline to start 2 months before/after the first month in sampling. 
```{r}
month_buffer <- 2

month_date_range <- seq(min(Timepoint$Month) - months(month_buffer), max(Timepoint$Month) + months(month_buffer), by='Month')
month_format <- format(month_date_range, '%b')
month_df <- data.frame(month_date_range, month_format)
```

Creating a year timeline buffer similar to the month timeline. 
```{r}
year_date_range <- seq(min(Timepoint$Date) - months(month_buffer), max(Timepoint$Date) + months(month_buffer), by='Year')
year_date_range <- as.Date(
    intersect(
        ceiling_date(year_date_range, unit="Year"),
        floor_date(year_date_range, unit="Year")
    ),  origin = "1970-01-01"
)
year_format <- format(year_date_range, '%Y')
year_df <- data.frame(year_date_range, year_format)
```

Creating the timeline plot. 
```{r}
#### PLOT ####

timeline_plot<-ggplot(Timepoint,aes(x=Date,y=0, col=Stage, label=Description))
timeline_plot<-timeline_plot+labs(col="Stage")
timeline_plot<-timeline_plot+scale_color_manual(values=stage_colors, labels=stage_levels, drop = FALSE)
timeline_plot<-timeline_plot+theme_classic()

# Plot horizontal black line for timeline
timeline_plot<-timeline_plot+geom_hline(yintercept=0, 
                color = "black", size=0.3)

# Plot vertical segment lines for milestones
timeline_plot<-timeline_plot+geom_segment(data=Timepoint[Timepoint$month_count == 1,], aes(y=position,yend=0,xend=date), color='black', size=0.2)

# Plot scatter points at zero and date
timeline_plot<-timeline_plot+geom_point(aes(y=0), size=3)

# Don't show axes, appropriately position legend
timeline_plot<-timeline_plot+theme(axis.line.y=element_blank(),
                 axis.text.y=element_blank(),
                 axis.title.x=element_blank(),
                 axis.title.y=element_blank(),
                 axis.ticks.y=element_blank(),
                 axis.text.x =element_blank(),
                 axis.ticks.x =element_blank(),
                 axis.line.x =element_blank(),
                 legend.position = "bottom"
                )

# Show text for each month
timeline_plot<-timeline_plot+geom_text(data=Timepoint, aes(x=Month,y=-0.1,label=month_format),size=2.5,vjust=0.5, color='black', angle=90)
# Show year text
timeline_plot<-timeline_plot+geom_text(data=Timepoint, aes(x=Year,y=-0.2,label=year_format, fontface="bold"),size=2.5, color='black')
# Show text for each milestone
timeline_plot<-timeline_plot+geom_text(aes(y=text_position,label=Description),size=2.5)
print(timeline_plot)
```

####### Tank Temperature Conditions ####### 


```{r}

```


####### Tank pH and pCO2 Conditions ####### 


```{r}

```


####### Carbonate Chemistry Data ####### 

```{r}

```

####### Continuous Data: pH (Apex), temp (Apex), temp (Hobo), light (Apex) ####### 

### APEX DATA ### 

Read in raw Apex download files with light, temperature, and pH. 
```{r}
## Reading in apex continuous data: temperature and pH 
apex1 <- read.csv('Environmental_data/Apex_continuous_data/Acclimation_0918_0921.csv')
  # apex1$Date <- as.Date(apex1$Date.Time)
 #  apex1$Time <- format(as.POSIXct(apex1$Date.Time), format="%H:%M:%S")
  
  # apex1$Date.Time <- strptime(as.character(apex1$Date.Time), "%d/%m/%Y") # changing date format from X/X/XXX XX:XX to XXXX-XX-XX XX:XX
 #  apex1$Date.Time <- format(apex1$Date.Time, "%Y-%m-%d")
   
apex2 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_0922.csv')
   apex2 <- select(apex2, -X) # removing column labeled X
apex3 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_0923.csv')
  apex3 <- select(apex3, -X) # removing column labeled X
apex4 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_0924.csv')
  apex4 <- select(apex4, -X) # removing column labeled X
apex5 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_0925_0926.csv')
  apex5 <- select(apex5, -X) # removing column labeled X
apex6 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_0926_0927.csv')
  apex6 <- select(apex6, -X) # removing column labeled X
apex7 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_0929.csv')
  apex7 <- select(apex7, -X)
apex8 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_1001.csv')
  apex8 <- select(apex8, -X)
apex9 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_1003.csv')
  apex9 <- select(apex9, -X)
apex10 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_1005.csv')
  apex10 <- select(apex10, -X)
apex11 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_1007.csv')
  apex11 <- select(apex11, -X)
apex12 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_1008.csv')
  apex12 <- select(apex12, -X)
apex13 <- read.csv('Environmental_data/Apex_continuous_data/Experimental_1119.csv')
  apex13 <- select(apex13, -X)

  
## Attempting to make a loop to remove the X columns from apex dataframes
# apex_X <- c(apex2, apex3, apex4, apex5, apex6, apex7, apex8, apex9, apex10, apex11, apex12, apex13)
# for (i in apex_X) {
#  i[,1] = NULL
# }

## Joining dataframes apex1 - apex13
Apex_data <- bind_rows(apex2, apex3, apex4, apex5, apex6, apex7, apex8, apex9, apex10, apex11, apex12, apex13)
  head(Apex_data)
  tail(Apex_data)
```

Grouping by treatment
```{r}
```


Graphing apex continuous data 
```{r}
## Testing dual axis graph with Tank 1 pH and temperature 

temperatureColor <- "firebrick1"
pHColor <- "dodgerblue1"
coeff <- 4

ggplot(Apex_data, aes(x=Date.Time)) + 
  geom_line(aes(y=Tmp_1), size=2, color=temperatureColor) + 
  geom_line(aes(y=pH_1), size=2, color=pHColor) + 
  scale_y_continuous(
    name = "Temperature", 
    sec.axis = sec_axis(~.*coeff, name="pH")
  ) +
  theme_ipsum() + 
  theme(
    axis.title.y = element_text(color = temperatureColor, size=13),
    axis.title.y.right = element_text(color = pHColor, size=13)
  ) + 
  ggtitle("Apex Data")

```

### HOBO LOGGER DATA ###  

Reading in hobo logger data. 
```{r}
## Ambient Temperature Ambient pCO2 
Tank1 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank1.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
  Tank1 <- Tank1 %>% rename(Tank1 = V3)
Tank6 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank6.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
Tank8 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank8.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]

## Ambient Temperature High pCO2
Tank3 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank3.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
Tank11 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank11.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
Tank12 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank12.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]

## High Temperature Ambient pCO2
Tank4 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank4.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
Tank7 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank7.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
Tank9 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank9.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]

## High Temperature High pCO2
Tank2 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank2.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
Tank5 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank5.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
Tank10 <- read.csv('Environmental_data/Temp_Hobo_Loggers/20190117_Tank10.csv', sep=",", skip=c(40), header=FALSE, na.strings = "NA")[ ,2:3]
````











