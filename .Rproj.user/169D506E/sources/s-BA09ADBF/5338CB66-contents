#Title: Delta TA
#Project: NSF BSF
#Author: HM Putnam 
#Edited by: HM Putnam
#Date Last Modified: 20180915
#See Readme file for details

#Chisholm and Gattuso 
#precipitation of 1 mol of CaCO3,reduces the total alkalinity by two molar equivalents
#thus the change in TA divided by 2 is equal to the Âµmol of CaCO3 

rm(list=ls()) #clears workspace 

## install packages if you dont already have them in your library
#if ("devtools" %in% rownames(installed.packages()) == 'FALSE') install.packages('devtools') 
#library(devtools)

##### Extract TA from titration files #####

#read in TA data
DTA <- read.csv("~/MyProjects/Holobiont_Integration/RAnalysis/Data/Delta_TA/Delta_TA_Output.csv", sep=",", header=TRUE)

#read in sample info
Info <- read.csv("~/MyProjects/Holobiont_Integration/RAnalysis/Data/20180914_DeltaTA.csv", sep=",", header=TRUE)

data <- merge(DTA, Info, by="Fragment.ID")

#convert Liter and Kg are interchangable
#Correct TA for volume (mass)
data$TA.micromol <- data$TA*(data$Vol.ml/1000)

#fill in column with initial values
initials <- subset(data, Type=="INITIAL")
inits <- aggregate(TA.micromol~Light.or.Dark, data=initials, FUN=mean)
data  <- merge(data , inits, by="Light.or.Dark")
colnames(data)[colnames(data) == 'TA.micromol.x'] <- 'Final.micromol'
colnames(data)[colnames(data) == 'TA.micromol.y'] <- 'Initial.micromol'

#Subtract Final from Initial
data$Delta.TA <- data$Initial.micromol - data$Final.micromol

#fill in column with blank values
blnks <- subset(data, Type=="BLANK")
blnks <-mean.blnks <- aggregate(Delta.TA ~ Light.or.Dark, data=blnks, FUN=mean)
data <- merge(data, blnks, by="Light.or.Dark")
colnames(data)[colnames(data) == 'Delta.TA.x'] <- 'Delta.TA.micromol'
colnames(data)[colnames(data) == 'Delta.TA.y'] <- 'Delta.TA.Blank.micromol'

#Subtract Blank from all
data$Corr.TA <- data$Delta.TA.micromol-data$Delta.TA.Blank.micromol

#subset to data only
data <- subset(data, Type!="INITIAL")

#divide by 2 for molar equivalents and
data$Corr.TA <- data$Corr.TA/2

plot(data$Corr.TA ~data$Type)

#subset to data only
samp.data <- subset(data, Type=="CHAMBER")

#Normalize to Surface Area
samp.data$micromol.cm2 <- samp.data$Corr.TA/samp.data$Surface.Area

#Set time format
samp.data$Start.Time <- as.POSIXct(samp.data$Start.Time,format="%H:%M", tz = "") #convert time from character to time
samp.data$Stop.Time <- as.POSIXct(samp.data$Stop.Time,format="%H:%M", tz = "") #convert time from character to time

samp.data$Duration.min <- samp.data$Stop.Time - samp.data$Start.Time

#Standardize for time
samp.data$micromol.cm2.min <- samp.data$micromol.cm2/as.numeric(samp.data$Duration.min)

#normalize per hour
samp.data$micromol.cm2.hr <- samp.data$micromol.cm2.min*60
samp.data$micromol.cm2.hr

PA <- subset(samp.data, Species=="Pacuta")
write.csv(PA,"~/MyProjects/Holobiont_Integration/RAnalysis/Output/Inst_Calcification_rates_Pacuta.csv")
MC <- subset(samp.data, Species=="Mcapitata")
write.csv(MC,"~/MyProjects/Holobiont_Integration/RAnalysis/Output/Inst_Calcification_rates_Mcapitata.csv")

pdf("~/MyProjects/Holobiont_Integration/RAnalysis/Output/BothSpecies_Inst_Calcification.pdf")
par(mfrow=c(2,1))

PAR.PA <- as.numeric(PA$Light.Value)
PAR.PA.cham <- as.numeric(PA$Chamber.Light)
PA.C <- as.numeric(PA$micromol.cm2.hr)
plot(PAR.PA.cham,PA.C,xlab="", ylab="", xlim=c(0,max(PAR.PA)+100), ylim=c(-0.5, 0.5), cex.lab=0.8,cex.axis=0.8,cex=1, main="A) P. acuta", adj = 0.05) #set plot info
mtext(expression("Irradiance ("*mu*"mol photons "*m^-2*s^-1*")"),side=1,line=3.3,cex=1) #add labels
mtext(expression(Rate*" ("*mu*"mol "*CaCO[3]*" "*cm^-2*h^-1*")"),side=2,line=2,cex=1) #add labels

PAR.MC <- as.numeric(MC$Light.Value)
PAR.MC.cham <- as.numeric(MC$Chamber.Light)
MC.C <- as.numeric(MC$micromol.cm2.hr)
plot(PAR.MC.cham,MC.C,xlab="", ylab="", xlim=c(0,max(PAR.PA)+100), ylim=c(-0.5, 0.5), cex.lab=0.8,cex.axis=0.8,cex=1, main="A) M. capitata", adj = 0.05) #set plot info
mtext(expression("Irradiance ("*mu*"mol photons "*m^-2*s^-1*")"),side=1,line=3.3,cex=1) #add labels
mtext(expression(Rate*" ("*mu*"mol "*CaCO[3]*" "*cm^-2*h^-1*")"),side=2,line=2,cex=1) #add labels
dev.off()



