"0","## relative and absolute abundance datasheets"
"0","otu_seq_abs <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Seq_Absolute_raw_input.csv"", sep="","", header=TRUE) # abundance based on seqs "
"0","otu_type_abs <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Type_Absolute_raw_input.csv"", sep="","", header=TRUE) # absolute abundance based on type "
"0","otu_type_rel <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Type_Relative_raw_input.csv"", sep="","", header=TRUE) # relative abundance based on type "
"0","## taxonomy and sample info datasheets"
"0","tax_seq <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Taxonomy_Seq.csv"", sep="","", header=TRUE)"
"0","tax_type <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Taxonomy_Type.csv"", sep="","", header=TRUE)"
"0","samples_df <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Sample_variables.csv"", sep="","", header=TRUE)"
"0","samples_df <- na.omit(samples_df)"
"0","#reading timepoint as factor"
"0","samples_df$Timepoint <- as.factor(samples_df$Timepoint)"
"0","# Flipping columns and rows in the OTU matrix so that columns are sample IDs and rows are the OTU outputs"
"0","# Using transpose function: https://www.r-statistics.com/tag/transpose/. "
"0","otu_mat_seq <- t(otu_seq_abs)"
"0","otu_mat_abs_type <- t(otu_type_abs)"
"0","otu_mat_rel_type <- t(otu_type_rel)"
"0","# deleting top row generated by transpose function"
"0","# otu_mat = otu_mat[-1,] # but that gets rid of the transpose function to flip the rows and columns... hm.."
"0","# Exporting new dataframe to get a list of the type profiles"
"0","write.csv(otu_mat_seq, ""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Seq_Absolute_transposed.csv"")"
"0","write.csv(otu_mat_abs_type, ""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Type_Absolute_transposed.csv"")"
"0","write.csv(otu_mat_rel_type, ""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Type_Relative_transposed.csv"")"
