"0","# Taking out the ""X"" in front of each column and row ; come back to figuring out to take out the X in row names "
"0","seq_abundance_transposed <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Seq_Absolute_transposed_alpha.csv"", sep = "","", header = TRUE)"
"0","for (col in 1:ncol(seq_abundance_transposed)) {"
"0","  colnames(seq_abundance_transposed)[col] <- sub(""X"", """", colnames(seq_abundance_transposed)[col])"
"0","}"
"0","row.names(seq_abundance_transposed) <- seq_abundance_transposed$sample_uid # defining row names from the uid column"
"0","seq_abundance_transposed <- seq_abundance_transposed %>% select (-sample_uid) # removing the sample uid column since it is now used as a row name"
"0","type_abundance_transposed <- read.csv(""~/MyProjects/Acclim_Dynamics/ITS2/R_Input/Type_Absolute_transposed_alpha.csv"", sep = "","", header = TRUE)"
"0","for (col in 1:ncol(type_abundance_transposed)) {"
"0","  colnames(type_abundance_transposed)[col] <- sub(""X"", """", colnames(type_abundance_transposed)[col])"
"0","}"
"0","row.names(type_abundance_transposed) <- type_abundance_transposed$sample_uid # defining row names from the uid column"
"0","type_abundance_transposed <- type_abundance_transposed %>% select (-sample_uid) # removing the sample uid column since it is now used as a row name"
"0","# Transforming the OTU and tax datatables into matrixes "
"0","seq_abundance_transposed <- as.matrix(seq_abundance_transposed)"
"0","type_abundance_transposed <- as.matrix(type_abundance_transposed)"
